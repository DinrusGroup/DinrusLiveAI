/**
Модуль реализации Задачи для Искуственного Интеллекта.
Под выполнением задач понимается взаимодействие программы ИИ с очередью
системных сообщений и через сетевые каналы, а также
устройства ввода-вывода. Вся эта совокупность образует ИнтерфейсЗадач.

Это подразумевает, что на определёном канале должен постоянно
работать ПриёмникЗадач (TaskListener). Программно требуется определить то,
как поступает задача и как её идентифицировать. Ввод данных через командную строку
в таких программах, как интерпретаторы и компиляторы, - это тот же самый "поток" задач,
если разобраться. Следовательно, сторонние программы, которые обращаются к ИИ с запросом
на решение, должны "говорить" на языке заданий.

Язык заданий (TL - task language, или ЯЗ, по-русски) может содержать семантические элементы,
которые передают тип задачи и её описание. Таким образом, ЯЗ на стороне клиента состоит из
описания Задания; а на стороне сервера ИИ - описание задания парсируется и передаётся далее как
Задача или набор задач (Задача[]).

В системе Windows есть планировщик заданий. Возможно, ИИ будет использовать его в качестве средства
реализации задач. Некоторая часть реализаций может быть выполнена из ИИ непосредственно, через ПроцессорВыбора.
**/
module LiveAI.Task;

enum ПТипЗадачи: бцел
{
	Математика;//математический
	Логика;//логический
	Геометрия;//геометрический
	МультиМед;//мультимедийный
	БД;//к базам данных
	ФайлСис;//к файловой системе
	Интернет;//к интернет-ресурсу
	Принтер;
	Сканер;
	Видеокамера;
	Биометрия;//биометрическое устройство
}

interface ИЗадача
{
	проц устТип(ПТипЗадачи тз);
	ПТипЗадачи дайТип();
}

class Задача: ИЗадача
{
private
	{
	ПТипЗадачи тз;
	}

public:
	this(){}
	this(ПТипЗадачи тз){устТип(тз);}

	проц устТип(ПТипЗадачи тз){this.тз = тз;}
	ПТипЗадачи дайТип(){return this.тз;}

}